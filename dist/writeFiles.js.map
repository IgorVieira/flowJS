{"version":3,"sources":["writeFiles.js"],"names":[],"mappings":";;;;wBAAqB,UAAU;;;;kBAChB,IAAI;;;;AACnB,sBAAS,YAAY,iBAAI,CAAC;AAC1B,IAAI,aAAa,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC,aAAa,CAAC;AAC5D,IAAI,OAAO,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC;;AAIvC,IAAI,OAAO,GAAG,gBAAG,aAAa,CAAC,IAAI,CAAC,CAAC;;AAErC,OAAO,CACC,IAAI,CAAC,UAAS,IAAI,EAAE;AACxB,cAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;CACpC,CAAC,SACI,CAAC,WAAW,EAAE,UAAS,CAAC,EAAE;AAC5B,cAAO,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;CACzC,CAAC,SACI,CAAC,UAAS,CAAC,EAAE;AACf,cAAO,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;CACxC,CAAC,CAAA","file":"writeFiles.js","sourcesContent":["import bluebird from 'bluebird';\nimport fs from 'fs';\nbluebird.promisifyAll(fs);\nlet StringDecoder = require('string_decoder').StringDecoder;\nlet decoder = new StringDecoder('utf8');\n\n\n\t\n\tvar Promise = fs.readFileAsync(name);\n\n\tPromise\n        .then(function(data) {\n\t    console.log(decoder.write(data));  \n\t})\n\t.catch(SyntaxError, function(e) {\n\t    console.error(\"invalid json in file\");\n\t})\n\t.catch(function(e) {\n\t    console.error(\"unable to read file\");\n\t})\n\n"],"sourceRoot":"/source/"}